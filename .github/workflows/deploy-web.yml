name: Deploy Web App to Azure

on:
  push:
    branches: ["*"]
    paths:
      - "src/AlbumViewerAngular/**"
      - ".github/workflows/deploy-web.yml"
  workflow_dispatch:

env:
  WEB_APP_NAME: kiz-albumviewer-web
  AZURE_RESOURCE_GROUP: kiz-albumviewer-rg
  WEB_PROJECT_PATH: src/AlbumViewerAngular

jobs:
  build-and-deploy-web:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "16"
          # cache disabled to avoid failing when package-lock.json is not present on workflow runner

      - name: Install dependencies
        run: |
          cd ${{ env.WEB_PROJECT_PATH }}
          npm install --no-audit --no-fund

      - name: Build Angular app (production)
        run: |
          cd ${{ env.WEB_PROJECT_PATH }}
          npm run build -- --configuration=production

          # Copy web.config for App Service (IIS) compatibility if present
          if [ -f src/web.config ]; then
            cp src/web.config dist/
          fi

      - name: Debug show Node/npm and dist contents
        run: |
          cd ${{ env.WEB_PROJECT_PATH }}
          echo Node: $(node --version)
          echo Npm: $(npm --version)
          echo Working dir: $(pwd)
          ls -la
          echo dist contents:
          ls -la dist || echo dist not present

      - name: Ensure zip is installed (runner)
        run: |
          if ! command -v zip >/dev/null 2>&1; then
            sudo apt-get update && sudo apt-get install -y zip
          else
            echo "zip already installed"
          fi

      - name: Zip build output
        run: |
          cd ${{ env.WEB_PROJECT_PATH }}
          cd dist
          zip -r ../deployment.zip .

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy ZIP package to App Service (ZIP Deploy)
        run: |
          az webapp deployment source config-zip \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --name ${{ env.WEB_APP_NAME }} \
            --src ${{ env.WEB_PROJECT_PATH }}/deployment.zip

      - name: Verify Web deployment
        run: |
          echo "ðŸŽ‰ Web app deployment completed!"
          WEB_URL="https://${{ env.WEB_APP_NAME }}.azurewebsites.net"
          echo "Testing Web app at: $WEB_URL"
          # Verify root page responds
          curl -f "$WEB_URL" || (echo "Root page check failed" && exit 1)
